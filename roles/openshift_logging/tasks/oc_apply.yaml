---
- name: Checking generation of {{file_content.kind}} {{file_content.metadata.name}}
  shell: >
    {{ openshift.common.client_binary }}
    --config={{ kubeconfig }}
    get {{file_content.kind}} {{file_content.metadata.name}}
    -o jsonpath='{.metadata.resourceVersion}'
    -n {{namespace}} || echo 0
  register: generation_init
  changed_when: no

- name: Applying {{file_name}}
  command: >
    {{ openshift.common.client_binary }} --config={{ kubeconfig }}
    apply -f {{ file_name }}
    -n {{ namespace }}
  register: generation_apply
  failed_when: "'error' in generation_apply.stderr"
  changed_when: no

- name: Determine change status of {{file_content.kind}} {{file_content.metadata.name}}
  shell: >
    {{ openshift.common.client_binary }} --config={{ kubeconfig }}
    get {{file_content.kind}} {{file_content.metadata.name}}
    -o jsonpath='{.metadata.resourceVersion}'
    -n {{namespace}} || echo 0
  register: generation_changed
  changed_when: generation_changed.stdout | int  > generation_init.stdout | int
  when:
    - "'field is immutable' not in generation_apply.stderr"

- name: Removing previous {{file_name}}
  command: >
    {{ openshift.common.client_binary }} --config={{ kubeconfig }}
    delete -f {{ file_name }}
    -n {{ namespace }}
  register: generation_delete
  failed_when: "'error' in generation_delete.stderr"
  changed_when: generation_delete.rc == 0
  when: "'field is immutable' in generation_apply.stderr"

- name: Recreating {{file_name}}
  command: >
    {{ openshift.common.client_binary }} --config={{ kubeconfig }}
    apply -f {{ file_name }}
    -n {{ namespace }}
  register: generation_apply
  failed_when: "'error' in generation_apply.stderr"
  changed_when: generation_apply.rc == 0
  when: "'field is immutable' in generation_apply.stderr"
