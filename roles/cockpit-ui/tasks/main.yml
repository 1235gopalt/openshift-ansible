---
- name: Expose docker-registry
  command: >
    {{ openshift.common.client_binary }} expose service docker-registry -n default
  register: expose_docker_registry
  changed_when: "'already exists' not in expose_docker_registry.stderr"
  failed_when: "'already exists' not in expose_docker_registry.stderr and expose_docker_registry.rc != 0"

- name: Create passthrough route for registry-console
  command: >
    {{ openshift.common.client_binary }} create route passthrough
    --service registry-console
    --port registry-console
    -n default
  register: create_registry_console_route
  changed_when: "'already exists' not in create_registry_console_route.stderr"
  failed_when: "'already exists' not in create_registry_console_route.stderr and create_registry_console_route.rc != 0"

- name: Retrieve docker-registry route
  command: "{{ openshift.common.client_binary }} get route docker-registry -n default --template='{{ '{{' }} .spec.host {{ '}}' }}'"
  register: docker_registry_route
  failed_when: false
  changed_when: false

- name: Retrieve cockpit kube url
  command: "{{ openshift.common.client_binary }} get route registry-console -n default --template='https://{{ '{{' }} .spec.host {{ '}}' }}'"
  register: registry_console_cockpit_kube_url
  failed_when: false
  changed_when: false

- set_fact:
    cockpit_image_prefix: "{{ '-p IMAGE_PREFIX=' ~ openshift_cockpit_deployer_prefix | default('') }}"

- name: Deploy registry-console
  command: >
    {{ openshift.common.client_binary }} new-app --template=registry-console
    {{ cockpit_image_prefix }}
    -p OPENSHIFT_OAUTH_PROVIDER_URL="{{ openshift.master.public_api_url }}"
    -p REGISTRY_HOST="{{ docker_registry_route.stdout }}"
    -p COCKPIT_KUBE_URL="{{ registry_console_cockpit_kube_url.stdout }}"
    -n default
  register: deploy_registry_console
  changed_when: "'already exists' not in deploy_registry_console.stderr"
  failed_when: "'already exists' not in deploy_registry_console.stderr and deploy_registry_console.rc != 0"
