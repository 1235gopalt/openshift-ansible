---
# input variables:
# - repoquery_cmd
# - excluder
# - openshift_upgrade_target
- block:
  - name: Get available excluder version
    repoquery:
      name: "{{ excluder }}"
      ignore_excluders: true
    register: excluder_out

  - fail:
      msg: "Package {{ excluder }} not found"
    when: not excluder_out.results.package_found

  - set_fact:
      excluder_version: "{{ excluder_out.results.versions.available_versions.0 }}"

  - name: "{{ excluder }} version detected"
    debug:
      msg: "{{ excluder }}: {{ excluder_version }}"

  - name: Check the available {{ excluder }} version is at most of the upgrade target version
    fail:
      msg: "Available {{ excluder }} version {{ excluder_version }} is higher than the upgrade target version"
    when:
    - "{{ excluder_version != '' }}"
    - "{{ excluder_version.split('.')[0:2] | join('.') | version_compare(openshift_upgrade_target.split('.')[0:2] | join('.'), '>', strict=True) }}"
  when:
  - not openshift.common.is_atomic | bool
